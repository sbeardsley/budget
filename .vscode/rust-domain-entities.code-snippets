{
    // Place your budget workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Entity Field": {
        "scope": "rust",
        "prefix": "efnt",
        "body": [
            "#[derive(Debug, Clone)]",
            "pub struct ${1:field}(${2:type});",
            "",
            "impl From<${2:type}> for ${1:field} {",
            "    fn from(${3:argname}: ${2:type}) -> Self {",
            "        Self(${3:argname})",
            "    }",
            "}",
            "",
            "impl From<${1:field}> for ${2:type} {",
            "    fn from(${3:argname}: ${1:field}) -> Self {",
            "        ${3:argname}.0",
            "    }",
            "}"
        ],
        "description": "Entity Field New Type"
    },
    "Entity": {
        "scope": "rust",
        "prefix": "ent",
        "body": [
            "#[derive(Debug, Clone)]",
            "pub struct ${1:entity} {",
            "    $0",
            "    pub created_at: DateTime<Utc>,",
            "    pub updated_at: DateTime<Utc>,",
            "}",
            "",
            "impl ${1:entity} {",
            "    pub fn new() -> Self {",
            "        let now = Utc::now();",
            "        Self {",
            "            ",
            "            created_at: now,",
            "            updated_at: now,",
            "        }",
            "    }",
            "}"
        ],
        "description": "Entity"
    },
    "Pub Field": {
        "scope": "rust",
        "prefix": "pfield",
        "body": ["pub ${1:name}: ${2:type},"],
        "description": "Field"
    },
    "Field": {
        "scope": "rust",
        "prefix": "field",
        "body": ["${1:name}: ${2:type}::from(${1:name}),"],
        "description": "Field"
    }
}
