{
    "version": "2.0.0",

    "tasks": [
      {
        "label": "rust crud usecase module",

        "command": "touch '${relativeFileDirname}/create_${input:entity_name}_use_case.rs' '${relativeFileDirname}/update_${input:entity_name}_use_case.rs' '${relativeFileDirname}/get_one_${input:entity_name}_use_case.rs' '${relativeFileDirname}/get_all_${input:entity_name}_use_case.rs' && echo 'mod create_${input:entity_name}_use_case;\nmod update_${input:entity_name}_use_case;\nmod get_one_${input:entity_name}_use_case;\nmod get_all_${input:entity_name}_use_case;\n' >> ${relativeFile} && echo 'pub use create_${input:entity_name}_use_case::*;\npub use update_${input:entity_name}_use_case::*;\npub use get_one_${input:entity_name}_use_case::*;\npub use get_all_${input:entity_name}_use_case::*;\n' >> ${relativeFile}",

        "type": "shell",
        "problemMatcher": [],
        "presentation": {
          "echo": false,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": false,
          "clear": true
        },
     },
     {
        "label": "rust crud service module",

        "command": "touch '${relativeFileDirname}/create_${input:entity_name}_service.rs' '${relativeFileDirname}/update_${input:entity_name}_service.rs' '${relativeFileDirname}/get_one_${input:entity_name}_service.rs' '${relativeFileDirname}/get_all_${input:entity_name}_service.rs' && echo 'mod create_${input:entity_name}_service;\nmod update_${input:entity_name}_service;\nmod get_one_${input:entity_name}_service;\nmod get_all_${input:entity_name}_service;\n' >> ${relativeFile} && echo 'pub use create_${input:entity_name}_service::*;\npub use update_${input:entity_name}_service::*;\npub use get_one_${input:entity_name}_service::*;\npub use get_all_${input:entity_name}_service::*;\n' >> ${relativeFile}",

        "type": "shell",
        "problemMatcher": [],
        "presentation": {
          "echo": false,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": false,
          "clear": true
        },
     },
     {
        "label": "rust crud service handler contracts",

        "command": "touch '${relativeFileDirname}/create_${input:entity_name}_command_handler.rs' '${relativeFileDirname}/update_${input:entity_name}_command_handler.rs' '${relativeFileDirname}/get_one_${input:entity_name}_command_handler.rs' '${relativeFileDirname}/get_all_${input:entity_name}_command_handler.rs' && echo 'mod create_${input:entity_name}_command_handler;\nmod update_${input:entity_name}_command_handler;\nmod get_one_${input:entity_name}_command_handler;\nmod get_all_${input:entity_name}_command_handler;\n' >> ${relativeFile} && echo 'pub use create_${input:entity_name}_command_handler::*;\npub use update_${input:entity_name}_command_handler::*;\npub use get_one_${input:entity_name}_command_handler::*;\npub use get_all_${input:entity_name}_command_handler::*;\n' >> ${relativeFile}",

        "type": "shell",
        "problemMatcher": [],
        "presentation": {
          "echo": false,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": false,
          "clear": true
        },
     },
     {
        "label": "rust crud repo_contract module",

        "command": "touch '${relativeFileDirname}/create_${input:entity_name}_repository.rs' '${relativeFileDirname}/update_${input:entity_name}_repository.rs' '${relativeFileDirname}/get_one_${input:entity_name}_repository.rs' '${relativeFileDirname}/get_all_${input:entity_name}_repository.rs' && echo 'mod create_${input:entity_name}_repository;\nmod update_${input:entity_name}_repository;\nmod get_one_${input:entity_name}_repository;\nmod get_all_${input:entity_name}_repository;\n' >> ${relativeFile} && echo 'pub use create_${input:entity_name}_repository::*;\npub use update_${input:entity_name}_repository::*;\npub use get_one_${input:entity_name}_repository::*;\npub use get_all_${input:entity_name}_repository::*;\n' >> ${relativeFile}",

        "type": "shell",
        "problemMatcher": [],
        "presentation": {
          "echo": false,
          "reveal": "silent",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": false,
          "clear": true
        },
     },
  ],

  "inputs": [

    {
      "type": "promptString",
      "id": "entity_name",
      "description": "crud entity_name",
      "default": "my_entity"
    }
  ]
}
